name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email address of the user.'
        required: true
        example: admin@gmail.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: 'The password of the user.'
        required: true
        example: '123456789'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      email: admin@gmail.com
      password: '123456789'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Login successful.",
            "data": {
                "token": "1|T8cDp5zUoS1NriCCU5z1Qkla3A48k5TS8NaELM1Z",
                "user": {
                    "id": 1,
                    "name": "admin",
                    "email": "admin@gmail.com"
                }
            }
          }
        headers: []
        description: success
        custom: []
      -
        status: 401
        content: |-
          {
            "status": "error",
            "message": "Invalid credentials. Please try again."
          }
        headers: []
        description: unauthorized
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "An error occurred during login. Please try again."
          }
        headers: []
        description: error
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/password/email
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email address of the user requesting the password reset.'
        required: true
        example: admin@gmail.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      email: admin@gmail.com
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Success",
            "data": {
                "message": "We have emailed your password reset link."
            }
          }
        headers: []
        description: success
        custom: []
      -
        status: 400
        content: |-
          {
            "status": "error",
            "message": "Please wait before retrying."
          }
        headers: []
        description: error
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "An error occurred during password reset. Please try again."
          }
        headers: []
        description: error
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/password/reset
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      token:
        name: token
        description: 'The password reset token.'
        required: true
        example: 0254315374cd2a6a6d7868d9cd9b9a9742dc5f9d1034c06b0af14af81c16b5d5
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: 'The email address for which the reset is requested.'
        required: true
        example: admin@gmail.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      token: 0254315374cd2a6a6d7868d9cd9b9a9742dc5f9d1034c06b0af14af81c16b5d5
      email: admin@gmail.com
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Success",
            "data": {
                "message": "Token and email retrieved successfully",
                "token": "0accac5db371a2bf4ca0f4049f0a51fd49220e87e67ba76b3c525e342c429692",
                "email": "admin@gmail.com"
            }
          }
        headers: []
        description: success
        custom: []
      -
        status: 400
        content: |-
          {
            "status": "error",
            "message": "Token and email are required"
          }
        headers: []
        description: error
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "An error occurred while retrieving token and email. Please try again."
          }
        headers: []
        description: error
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/password/reset/post
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      token:
        name: token
        description: 'The password reset token.'
        required: true
        example: 0254315374cd2a6a6d7868d9cd9b9a9742dc5f9d1034c06b0af14af81c16b5d5
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: 'The email address associated with the password reset.'
        required: true
        example: admin@gmail.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: 'The new password.'
        required: true
        example: newpassword123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'The confirmation of the new password.'
        required: true
        example: newpassword123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      token: 0254315374cd2a6a6d7868d9cd9b9a9742dc5f9d1034c06b0af14af81c16b5d5
      email: admin@gmail.com
      password: newpassword123
      password_confirmation: newpassword123
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Success",
            "data": {
                "message": "Password reset successfully"
            }
          }
        headers: []
        description: success
        custom: []
      -
        status: 400
        content: |-
          {
            "status": "error",
            "message": "The password field must be at least 6 characters."
          }
        headers: []
        description: error
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "An error occurred during password reset. Please try again."
          }
        headers: []
        description: error
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/user/logout
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Logout successful.",
            "data": {
                "message": "Logged out successfully."
            }
          }
        headers: []
        description: success
        custom: []
      -
        status: 401
        content: |-
          {
            "status": "error",
            "message": "Unauthorized."
          }
        headers: []
        description: unauthorized
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "An error occurred while logging out. Please try again."
          }
        headers: []
        description: error
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/user
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "User information retrieved successfully.",
            "data": {
                "id": 1,
                "name": "admin",
                "email": "admin@gmail.com",
                "email_verified_at": null,
                "created_at": "2024-11-30T03:40:17.000000Z",
                "updated_at": "2024-11-30T03:40:17.000000Z"
            }
          }
        headers: []
        description: success
        custom: []
      -
        status: 401
        content: |-
          {
            "status": "error",
            "message": "Unauthorized."
          }
        headers: []
        description: unauthorized
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "An error occurred while retrieving the user. Please try again."
          }
        headers: []
        description: error
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/user/profile/edit
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the user.'
        required: true
        example: '"Admin"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: 'The email address of the user.'
        required: true
        example: '"admin@example.com"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: 'nullable The new password for the user. Minimum of 6 characters.'
        required: false
        example: '"newpassword123"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'nullable Confirmation of the new password. This field is required if the password is provided.'
        required: false
        example: '"newpassword123"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: '"Admin"'
      email: '"admin@example.com"'
      password: '"newpassword123"'
      password_confirmation: '"newpassword123"'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Success",
            "data": {
                "message": "Profile updated successfully.",
                "data": {
                    "id": 1,
                    "name": "Admin",
                    "email": "admin@example.com",
                    "email_verified_at": null,
                    "created_at": "2024-11-30T03:40:17.000000Z",
                    "updated_at": "2024-11-30T05:18:57.000000Z"
                }
            }
          }
        headers: []
        description: success
        custom: []
      -
        status: 400
        content: |-
          {
            "status": "error",
            "message": "Invalid data provided. Please check your inputs."
          }
        headers: []
        description: error
        custom: []
      -
        status: 401
        content: |-
          {
            "status": "error",
            "message": "Unauthorized. You must be logged in to update your profile."
          }
        headers: []
        description: unauthorized
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "An error occurred while updating the profile. Please try again."
          }
        headers: []
        description: error
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: api/user/profile/update
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the user.'
        required: true
        example: '"Admin"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: 'The email address of the user.'
        required: true
        example: '"admin@example.com"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: 'nullable The new password for the user. Minimum of 6 characters.'
        required: false
        example: '"newpassword123"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'nullable Confirmation of the new password. This field is required if the password is provided.'
        required: false
        example: '"newpassword123"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: '"Admin"'
      email: '"admin@example.com"'
      password: '"newpassword123"'
      password_confirmation: '"newpassword123"'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Success",
            "data": {
                "message": "Profile updated successfully.",
                "data": {
                    "id": 1,
                    "name": "Admin",
                    "email": "admin@gmail.com",
                    "email_verified_at": null,
                    "created_at": "2024-11-30T05:36:54.000000Z",
                    "updated_at": "2024-11-30T05:43:56.000000Z"
                }
            }
          }
        headers: []
        description: success
        custom: []
      -
        status: 400
        content: |-
          {
            "status": "error",
            "message": "Invalid data provided. Please check your inputs."
          }
        headers: []
        description: error
        custom: []
      -
        status: 401
        content: |-
          {
            "status": "error",
            "message": "Unauthorized. You must be logged in to update your profile."
          }
        headers: []
        description: unauthorized
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "An error occurred while updating the profile. Please try again."
          }
        headers: []
        description: error
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/user/profile/delete
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Success",
            "data": {
                "message": "Account deleted successfully."
            }
          }
        headers: []
        description: success
        custom: []
      -
        status: 401
        content: |-
          {
            "status": "error",
            "message": "Unauthorized. You must be logged in to delete your account."
          }
        headers: []
        description: unauthorized
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "An error occurred while deleting the account. Please try again."
          }
        headers: []
        description: error
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/user/change-password
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Success",
            "data": {
                "message": "Password changed successfully."
            }
          }
        headers: []
        description: success
        custom: []
      -
        status: 400
        content: |-
          {
            "status": "error",
            "message": "Validation error. Please provide valid current and new passwords."
          }
        headers: []
        description: validation_error
        custom: []
      -
        status: 401
        content: |-
          {
            "status": "error",
            "message": "Unauthorized. You must be logged in to change your password."
          }
        headers: []
        description: unauthorized
        custom: []
      -
        status: 500
        content: |-
          {
            "status": "error",
            "message": "An error occurred while changing the password. Please try again."
          }
        headers: []
        description: error
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
